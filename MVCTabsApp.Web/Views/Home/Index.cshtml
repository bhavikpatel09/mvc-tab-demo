@model MVCTabsApp.Web.Models.HomeViewModel

@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/_Layout.cshtml";
}

<h2>File Details</h2>

@using (Html.BeginForm("Save", "Home", FormMethod.Post))
{
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link active" data-toggle="tab" href="#personal">Personal</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#contact">Contact</a>
        </li>
    </ul>
    <div class="tab-content" id="tabs">

        <div id="personal" class="container tab-pane active">
            @if (Model.Personal != null)
            {
                <h3>Personal</h3>
                <div class="form-group">
                    <label for="email">First Name:</label>
                    @Html.TextBoxFor(x => x.Personal.FirstName, new { @class = "form-control", @placeholder = "Enter First Name" })
                </div>
                <div class="form-group">
                    <label for="email">Last Name:</label>
                    @Html.TextBoxFor(x => x.Personal.LastName, new { @class = "form-control", @placeholder = "Enter Last Name" })
                </div>
                <div class="form-group">
                    <label for="email">User Name:</label>
                    @Html.TextBoxFor(x => x.Personal.UserName, new { @class = "form-control", @placeholder = "Enter User Name" })
                </div>
                <!--you can also use formaction on multiple submit buttons to call different post actions 
                    (add formaction on each buttons and remove controller and action from begin form) -->
                <button type="submit" class="btn btn-primary" name="action" value="personal"> Save Personal </button>
            }
        </div>
        <div id="login" class="container tab-pane fade">
            @if (Model.Login != null)
            {
                <h3>Login</h3>
                <div class="form-group">
                    <label for="email">Email:</label>
                    @Html.TextBoxFor(x => x.Login.EmailAddress, new { @class = "form-control", @placeholder = "Enter Email" })
                </div>
                <div class="form-group">
                    <label for="email">Password:</label>
                    @Html.PasswordFor(x => x.Login.Password, new { @class = "form-control", @placeholder = "Enter Password" })
                </div>
                <div class="form-group">
                    <label for="email">Security Question:</label>
                    @Html.TextBoxFor(x => x.Login.SecurityQuestion, new { @class = "form-control", @placeholder = "Enter Security Question" })
                </div>
                <button type="submit" class="btn btn-primary" name="action" value="login"> Save Login</button>
            }
        </div>
        <div id="contact" class="container tab-pane fade">
            @if (Model.Contact != null)
            {
                <h3>Contact</h3>
                <div class="form-group">
                    <label for="email">Contact Email:</label>
                    @Html.TextBoxFor(x => x.Contact.ContactEmail, new { @class = "form-control", @placeholder = "Enter Contact Email" })
                </div>
                <div class="form-group">
                    <label for="email">Contact Number:</label>
                    @Html.TextBoxFor(x => x.Contact.ContactNumber, new { @class = "form-control", @placeholder = "Enter Contact Number" })
                </div>
                <div class="form-group">
                    <label for="email">Contact Person:</label>
                    @Html.TextBoxFor(x => x.Contact.ContactPerson, new { @class = "form-control", @placeholder = "Enter Contact Person" })
                </div>
                <button type="submit" class="btn btn-primary" name="action" value="contact"> Save Contact</button>
            }

        </div>
    </div>
}
